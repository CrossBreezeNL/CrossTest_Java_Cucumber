# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
      include:
      - master
      - develop
      - features/*
      - hotfix/*

  paths:
      include:
      - ./CrossTest_Java
      - ./Generation
      - ./Java
      - ./Model
      - ./Old


# - stage: Check
#   jobs:
#     - job: CheckCode
#       displayName: Check code
#       steps:
#       - task: Maven@3
#         inputs:
#           mavenPomFile: '$(System.DefaultWorkingDirectory)/TestCrossTest/pom.xml'
#           goals: 'validate'
#           publishJUnitResults: true
#           javaHomeOption: 'JDKVersion'
#           jdkVersionOption: '1.8'
#           mavenVersionOption: 'Default'
#           mavenOptions: '-Xmx3072m'
#           mavenAuthenticateFeed: false
#           effectivePomSkip: false
#           sonarQubeRunAnalysis: false

jobs:
  - job: CheckCode
    displayName: Check code
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: PowerShell@2
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/TestCrossTest/start_xtestsqlserverOnAzure.ps1'

    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

    - task: PowerShell@2
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/TestCrossTest/runSql.ps1'


    - task: Maven@3
      inputs:
        mavenPomFile: '$(System.DefaultWorkingDirectory)/TestCrossTest/pom.xml'
        goals: 'package'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        options: '-DskipTests=true'

    - task: Maven@3
      inputs:
        mavenPomFile: '$(System.DefaultWorkingDirectory)/TestCrossTest/pom.xml'
        goals: 'test'
        publishJUnitResults: true
        testResultsFiles: '**/target/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: '$(System.DefaultWorkingDirectory)/TestCrossTest/pom.xml'
    #     goals: 'compile'
    #     publishJUnitResults: false
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.8'
    #     mavenVersionOption: 'Default'
    #     mavenOptions: '-Xmx3072m'
    #     mavenAuthenticateFeed: false
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: false

    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: '$(System.DefaultWorkingDirectory)/TestCrossTest/pom.xml'
    #     goals: 'package'
    #     publishJUnitResults: false
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.8'
    #     mavenVersionOption: 'Default'
    #     mavenOptions: '-Xmx3072m'
    #     mavenAuthenticateFeed: false
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: false
    #     options: '-DskipTests=true'
    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: '$(System.DefaultWorkingDirectory)/TestCrossTest/pom.xml'
    #     goals: 'test'
    #     publishJUnitResults: false
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.8'
    #     mavenVersionOption: 'Default'
    #     mavenOptions: '-Xmx3072m'
    #     mavenAuthenticateFeed: false
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: false
